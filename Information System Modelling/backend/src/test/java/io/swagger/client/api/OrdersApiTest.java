/*
 * Surfing/kiting spot
 * Restful API for management of Surfing/kitting spot.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import java.math.BigDecimal;
import io.swagger.client.model.ErrorModel;
import io.swagger.client.model.GetOrder;
import io.swagger.client.model.Item;
import io.swagger.client.model.NewItem;
import io.swagger.client.model.Order;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for OrdersApi
 */
@Ignore
public class OrdersApiTest {

    private final OrdersApi api = new OrdersApi();

    /**
     * 
     *
     * Creates a new order. Duplicates are not allowed
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrderTest() throws Exception {
        Order body = null;
        NewItem response = api.addOrder(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * deletes a single order based on the ID supplied
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteOrderTest() throws Exception {
        Long id = null;
        Item response = api.deleteOrder(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * This endpoints are related with the orders model of the application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOrderTest() throws Exception {
        Long id = null;
        GetOrder response = api.getOrder(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * This endpoint returns all orders from the database.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOrdersTest() throws Exception {
        BigDecimal status = null;
        String partnerName = null;
        String name = null;
        List<GetOrder> response = api.getOrders(status, partnerName, name);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update order
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateOrderTest() throws Exception {
        Long id = null;
        Item response = api.updateOrder(id);

        // TODO: test validations
    }
}
