/*
 * Surfing/kiting spot
 * Restful API for management of Surfing/kitting spot.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AddUser;
import java.math.BigDecimal;
import io.swagger.client.model.ErrorModel;
import io.swagger.client.model.GetUser;
import io.swagger.client.model.Item;
import io.swagger.client.model.NewItem;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * 
     *
     * Creates a new user. Duplicates are not allowed
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addUserTest() throws Exception {
        AddUser body = null;
        NewItem response = api.addUser(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * deletes a single user based on the ID supplied
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws Exception {
        Long id = null;
        Item response = api.deleteUser(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * This endpoints are related with the Users model of the application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws Exception {
        Long id = null;
        GetUser response = api.getUser(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * This endpoint returns all Users from the database.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws Exception {
        String email = null;
        String fullName = null;
        String companyName = null;
        BigDecimal employeeCount = null;
        List<GetUser> response = api.getUsers(email, fullName, companyName, employeeCount);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws Exception {
        Long id = null;
        Item response = api.updateUser(id);

        // TODO: test validations
    }
}
