openapi: 3.0.1
info:
  title: Swagger StudentsApp
  description: This is StudentsApp - a sample app generated with Swagger.
  termsOfService: http://www.example.com/terms/
  contact:
    email: anonymous@example.com
  license:
    name: Apache-2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://localhost/StudentsApp
tags:
- name: Student's records
  description: access to student's records stored at service
  externalDocs:
    description: Find out more
    url: http://www.example.com
paths:
  /student:
    get:
      tags:
      - student
      summary: find all students
      operationId: findAllStudents
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Students'
            application/xml:
              schema:
                  $ref: '#/components/schemas/Students'
      deprecated: false
      security:
      - persistdata_auth:
        - write:students
        - read:students
    put:
      tags:
      - student
      summary: update an existing student
      operationId: updateStudent
      requestBody:
        description: Student object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        404:
          description: Student not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
      - persistdata_auth:
        - write:students
        - read:students
      x-codegen-request-body-name: body
    post:
      tags:
      - student
      summary: add a new student
      operationId: addStudent
      requestBody:
        description: Record object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
          description: Student added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        405:
          description: Validation exception
          content: {}
      security:
      - persistdata_auth:
        - write:students
        - read:students
      x-codegen-request-body-name: body
  /student/{rollNo}:
    get:
      tags:
      - student
      summary: find a student by rollNo
      operationId: findStudentByRollNo
      parameters:
      - name: rollNo
        in: path
        description: Numeric ID of the user to get.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Invalid rollNo supplied
          content: {}
        404:
          description: Student not found
          content: {}
      deprecated: false
      security:
      - persistdata_auth:
        - write:students
        - read:students
    delete:
      tags:
      - student
      summary: delete a student by rollNo
      operationId: deleteStudentByRollNo
      parameters:
      - name: rollNo
        in: path
        description: Numeric ID of the user to get.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Invalid rollNo supplied
          content: {}
        404:
          description: Student not found
          content: {}
      deprecated: false
      security:
      - persistdata_auth:
        - write:students
        - read:students
components:
  schemas:
    Student:
      required:
      - name
      - surname
      type: object
      properties:
        rollNo:
          type: integer
          format: int64
        name:
          type: string
          example: John
        surname:
          type: string
          example: Kowalski
      xml:
        name: Student
    Students:
      type: array
      items:
        $ref: '#/components/schemas/Student'
      xml:
        name: Students
        wrapped: true    
  securitySchemes:
    persistdata_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://localhost/oauth/dialog
          scopes:
            write:students: modify students records in your account
            read:students: read your students records
