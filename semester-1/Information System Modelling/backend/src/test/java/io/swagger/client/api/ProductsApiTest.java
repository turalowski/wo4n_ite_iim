/*
 * Surfing/kiting spot
 * Restful API for management of Surfing/kitting spot.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import java.math.BigDecimal;
import io.swagger.client.model.ErrorModel;
import io.swagger.client.model.GetProduct;
import io.swagger.client.model.Item;
import io.swagger.client.model.NewItem;
import io.swagger.client.model.Product;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ProductsApi
 */
@Ignore
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    /**
     * 
     *
     * Creates a new product. Duplicates are not allowed
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addProductTest() throws Exception {
        Product body = null;
        NewItem response = api.addProduct(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * deletes a single product based on the ID supplied
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteProductTest() throws Exception {
        Long id = null;
        Item response = api.deleteProduct(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * This endpoints are related with the products model of the application.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getProductTest() throws Exception {
        Long id = null;
        GetProduct response = api.getProduct(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * This endpoint returns all products from the database.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getProductsTest() throws Exception {
        BigDecimal price = null;
        String unitOfMeasurement = null;
        String name = null;
        List<GetProduct> response = api.getProducts(price, unitOfMeasurement, name);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update product
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateProductTest() throws Exception {
        Long id = null;
        Item response = api.updateProduct(id);

        // TODO: test validations
    }
}
